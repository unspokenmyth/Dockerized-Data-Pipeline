version: "3.9"

services:
  metastore-pg:
    image: postgres:14
    container_name: metastore-pg
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-hiveuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-hivepassword}
      POSTGRES_DB: hive_metastore
    volumes:
      - metastore_pg:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-hiveuser} -d hive_metastore"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - data-platform-net
    mem_limit: ${METASTORE_PG_MEM:-1g}
    restart: unless-stopped

  hive-metastore:
    image: bitsondatadev/hive-metastore:3.1.3-postgresql
    container_name: hive-metastore
    environment:
      HIVE_METASTORE_DB_HOST: metastore-pg
      HIVE_METASTORE_DB_NAME: hive_metastore
      HIVE_METASTORE_DB_USER: ${POSTGRES_USER:-hiveuser}
      HIVE_METASTORE_DB_PASS: ${POSTGRES_PASSWORD:-hivepassword}
    ports:
      - "${HIVE_METASTORE_PORT:-9083}:9083"
    volumes:
      - ./hive_conf:/opt/hive/conf:ro
    depends_on:
      metastore-pg:
        condition: service_healthy
    networks:
      - data-platform-net
    mem_limit: ${HIVE_METASTORE_MEM:-1g}
    restart: unless-stopped

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.3.5-java11
    container_name: namenode
    environment:
      CLUSTER_NAME: demo
    ports:
      - "${HDFS_NAMENODE_UI_PORT:-9870}:9870"
    volumes:
      - namenode_data:/hadoop/dfs/name
      - ./hadoop_conf:/etc/hadoop:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9870"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - data-platform-net
    mem_limit: ${NAMENODE_MEM:-1g}
    restart: unless-stopped

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.3.5-java11
    container_name: datanode
    environment:
      SERVICE_PRECONDITION: "namenode:${HDFS_NAMENODE_UI_PORT:-9870}"
    ports:
      - "${HDFS_DATANODE_UI_PORT:-9864}:9864"
    volumes:
      - datanode_data:/hadoop/dfs/data
      - ./hadoop_conf:/etc/hadoop:ro
    depends_on:
      - namenode
    networks:
      - data-platform-net
    mem_limit: ${DATANODE_MEM:-1g}
    restart: unless-stopped

  nifi:
    image: apache/nifi:1.26.0
    container_name: nifi
    ports:
      - "${NIFI_HTTP_PORT:-8080}:8080"
    environment:
      NIFI_WEB_HTTP_PORT: 8080
      NIFI_SENSITIVE_PROPS_KEY: ${NIFI_SENSITIVE_PROPS_KEY:-change-this-key}
    volumes:
      - ./nifi_conf:/opt/nifi/nifi-current/conf:ro
      - nifi_data:/opt/nifi/nifi-current/data
      - nifi_state:/opt/nifi/nifi-current/state
    depends_on:
      - namenode
      - datanode
    networks:
      - data-platform-net
    mem_limit: ${NIFI_MEM:-2g}
    restart: unless-stopped

  spark:
    build:
      context: ./spark_build
      dockerfile: Dockerfile
    container_name: spark
    ports:
      - "${SPARK_APP_UI_PORT:-4040}:4040"
      - "${SPARK_HISTORY_UI_PORT:-18080}:18080"
    volumes:
      - ./hadoop_conf:/opt/spark/conf/hadoop:ro
      - ./hive_conf/hive-site.xml:/opt/spark/conf/hive-site.xml:ro
      - ./hive_extra_jars:/opt/spark/jars/hive:ro
      - ./spark_jobs:/opt/spark/jobs:rw
    depends_on:
      - namenode
      - datanode
      - hive-metastore
    networks:
      - data-platform-net
    mem_limit: ${SPARK_MEM:-2g}
    restart: unless-stopped

  trino:
    image: trinodb/trino:435
    container_name: trino
    ports:
      - "${TRINO_HTTP_PORT:-8081}:8080"
      - "${TRINO_JMX_EXPORTER_PORT:-7071}:7071"
    volumes:
      - ./trino_plugins:/etc/trino
      - ./hadoop_conf:/etc/hadoop:ro
      - ./hive_conf/hive-site.xml:/etc/trino/hive-site.xml:ro
    depends_on:
      - hive-metastore
      - namenode
    networks:
      - data-platform-net
    mem_limit: ${TRINO_MEM:-2g}
    restart: unless-stopped

  superset:
    image: apache/superset:3.1.1
    container_name: superset
    ports:
      - "${SUPERSET_PORT:-8088}:8088"
    environment:
      SUPERSET_SECRET_KEY: ${SUPERSET_SECRET_KEY:-change-this-in-prod}
      SUPERSET_LOAD_EXAMPLES: "no"
    volumes:
      - ./superset_home:/app/superset_home
      - superset_data:/var/lib/superset
    command: >
      /bin/bash -c "
      superset fab create-admin --username admin --password admin --firstname Superset --lastname Admin --email admin@local.host || true &&
      superset db upgrade &&
      superset init
      "
    depends_on:
      - trino
    networks:
      - data-platform-net
    mem_limit: ${SUPERSET_MEM:-2g}
    restart: unless-stopped

  ignite:
    image: apacheignite/ignite:2.16.0
    container_name: ignite
    ports:
      - "${IGNITE_THIN_CLIENT_PORT:-10800}:10800"
      - "${IGNITE_REST_PORT:-8087}:8080"
    networks:
      - data-platform-net
    mem_limit: ${IGNITE_MEM:-1g}
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./prometheus:/etc/prometheus:ro
    networks:
      - data-platform-net
    mem_limit: ${PROMETHEUS_MEM:-1g}
    restart: unless-stopped

  grafana:
    image: grafana/grafana:11.1.0
    container_name: grafana
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin}
    depends_on:
      - prometheus
    networks:
      - data-platform-net
    mem_limit: ${GRAFANA_MEM:-1g}
    restart: unless-stopped

volumes:
  metastore_pg:
  namenode_data:
  datanode_data:
  nifi_data:
  nifi_state:
  superset_data:
  grafana_data:

networks:
  data-platform-net:
    driver: bridge